!***< variables

!define REGRACE_LINK {true}
*!
!1 !c FitNesse User Guide
!c Robert C. Martin,
!c Micah D. Martin,
!c Patrick Wilson-Welsh &
!c FitNesse contributors
----
!3 Table of Contents
 * [[Getting Started][#gettingstarted]]
 * [[Working with the FitNesse wiki][>FitNesseWiki]]
 * [[Writing Acceptance Tests][>WritingAcceptanceTests]] (jump directly to [[Fit][>WritingAcceptanceTests.FitFramework]] or [[Slim][>WritingAcceptanceTests.SliM]])
 * [[Administering FitNesse][>AdministeringFitNesse]]
 * [[Quick Reference Guide][>QuickReferenceGuide]]
 * [[Full Reference Guide][<FitNesse.FullReferenceGuide]] (takes some time to load)

!2 Introduction
FitNesse started as an HTML and [[wiki][http://wiki.org/wiki.cgi?WhatIsWiki]] "front-end" to [[FIT][http://fit.c2.com/]] ("Framework for Integrated Testing").

!*** From the [[Fit website][http://fit.c2.com/]]:

Great software requires collaboration and communication. Fit is a tool for enhancing collaboration in software development. It's an invaluable way to collaborate on complicated problems -and get them right- early in development.

Fit allows customers, testers, and programmers to learn what their software should do and what it does do. It automatically compares customers' expectations to actual results.

*!
!anchor gettingstarted
Interestingly both the wiki and Fit were developed by Ward Cunningham, and you can read about them both on Ward's [[c2 wiki][http://fit.c2.com/]].


Nowadays FitNesse is a comprehensive tool, supports multiple test systems and has been used for many software and even hardware projects.

In order to use FitNesse as a tool for [[Delivering the Right System][>DeliveringTheRightSystem]], collaboration is required.

!2 Getting Started

FitNesse is an application testing suite that allows you to test the business logic of your application. The tests that FitNesse runs integrate the various layers of your application, demonstrating even to non-coders that the application works as designed. By writing specifications (also known as [[Acceptance Tests][>AcceptanceTests]], you can create a common understanding among the team (coders and non-coders). This can prevent problems leading toÂ [[Project Death by Requirements][>ProjectDeathByRequirements]].

It is an ''integration testing tool''. That means that it provides a method to automatically determine that your application is working correctly. The goal is for FitNesse to operate at a level just ''below'' the user interface level, demonstrating that, given various inputs to your application, the correct results are computed. In a sense, you could consider it an alternative user interface for the application.

For this to work, the tests should be defined on a business level, in conjuntion with business representatives. They are basically business requirements, layed out in a way easy to understand by all stakeholders. When your tests are unambiguous, that's where your requirements can be automatically verified with your application.

To make it easy for all stake holders to interact with FitNesse, requirements can be created and edited through the web browser. It's a wiki! Requirements can be written in wiki syntax or via a rich text editor, so no knowledge of the wiki syntax is required.


| [[A Two-Minute Example][>TwoMinuteExample]] | ''A brief example. Read this one second.'' |

Convinced? [[Download and install][http://fitnesse.org/FitNesseDownload]] on your machine, if you haven't done so already.

----
For Fit test system users:

 * >FixtureGallery
